ng new project --strict --routing --style=css

ng g c --skip-tests

npm install tslib --save
npm install @fortawesome/fontawesome-free

"styles": [
  "node_modules/@fortawesome/fontawesome-free/css/all.min.css"
]

/tsconfig.json
"moduleResolution": "node",
"target": "ES2022",


npm install tailwindcss @tailwindcss/postcss postcss --force

/.postcssrc.json
{
  "plugins": {
    "@tailwindcss/postcss": {}
  }
}

/styles.css
@import "tailwindcss";

body {
  font-family: kanit;
}
<link rel="preconnect" href="https://fonts.googleapis.com">
<link href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Play:wght@400;700&family=Press+Start+2P&display=swap" rel="stylesheet">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

npm install prisma --save-dev
npm install @prisma/client

npx prisma init --datasource-provider mongodb
จะได้โฟลเดอร์ prisma/ และไฟล์ .env

แก้ .env ให้ใส่ MongoDB URI ของคุณ เพิ่ม /ชื่อdb หลัง.net

สร้าง schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
}

npx prisma generate

npm init -y
npm install express jsonwebtoken cors nodemon slugify express-jwt morgan multer cookie-parser express-session bcrypt jwt-decode
npm install --save-dev ts-node typescript
npm install --save-dev @types/bcrypt

{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "outDir": "./dist",
    "rootDir": "./",
    "strict": true,
    "esModuleInterop": true,          
    "allowSyntheticDefaultImports": true
  }
}

"scripts": {
  "start": "npx nodemon server.ts"
}

ng g c layouts/MainLayout
ng g c layouts/AuthLayout

export const routes: Routes = [
  {
    path: '',
    component: MainLayoutComponent,
    children: [
      { path: '', component: HomeComponent },
      { path: 'create', component: CreateComponent },
      { path: 'single/:id', component: SingleComponent },
    ],
  },
  {
    path: '',
    component: AuthLayoutComponent,
    children: [
      { path: 'login', component: LoginComponent },
      { path: 'register', component: RegisterComponent },
    ],
  },
];
